{
  "_args": [
    [
      {
        "raw": "koa-session2",
        "scope": null,
        "escapedName": "koa-session2",
        "name": "koa-session2",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/yangxz-nash/Desktop/koa/eduline2"
    ]
  ],
  "_from": "koa-session2@latest",
  "_id": "koa-session2@2.2.4",
  "_inCache": true,
  "_location": "/koa-session2",
  "_nodeVersion": "7.7.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/koa-session2-2.2.4.tgz_1494771219368_0.032819553976878524"
  },
  "_npmUser": {
    "name": "secbone",
    "email": "secbone@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "koa-session2",
    "scope": null,
    "escapedName": "koa-session2",
    "name": "koa-session2",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/koa-session2/-/koa-session2-2.2.4.tgz",
  "_shasum": "f4685c26641af012f7a95b79a0046109d4e85756",
  "_shrinkwrap": null,
  "_spec": "koa-session2",
  "_where": "/Users/yangxz-nash/Desktop/koa/eduline2",
  "author": {
    "name": "Secbone"
  },
  "bugs": {
    "url": "https://github.com/Secbone/koa-session2/issues"
  },
  "contributors": [
    {
      "name": "Tino Vyatkin",
      "email": "tino@vtkn.io"
    }
  ],
  "dependencies": {},
  "description": "Middleware for Koa2 to get/set session use with custom stores such as Redis or mongodb",
  "devDependencies": {
    "koa": "^2.0.1",
    "koa-router": "^7.0.1",
    "mocha": "^3.2.0",
    "supertest": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f4685c26641af012f7a95b79a0046109d4e85756",
    "tarball": "https://registry.npmjs.org/koa-session2/-/koa-session2-2.2.4.tgz"
  },
  "engines": {
    "node": ">=7.6.0"
  },
  "files": [
    "index.js",
    "libs"
  ],
  "gitHead": "3199b46409dbcadf4116d2deb9f9b8371abbfba0",
  "homepage": "https://github.com/Secbone/koa-session2#readme",
  "keywords": [
    "koa2",
    "koa",
    "session",
    "redis",
    "store",
    "middleware"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "secbone",
      "email": "secbone@gmail.com"
    }
  ],
  "name": "koa-session2",
  "optionalDependencies": {},
  "peerDependencies": {
    "koa": ">=2.0.1"
  },
  "readme": "# koa-session2\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Test coverage][codecov-image]][codecov-url]\n\nMiddleware for [Koa2](https://github.com/koajs/koa) to get/set session use with custom stores such as Redis or mongodb\n\nUse native ES6(async/await) by Nodejs v7.x, use `--harmony` option.\n\nOr you can use the old versions:\n- [babel](https://github.com/Secbone/koa-session2/tree/babel)\n- [node6](https://github.com/Secbone/koa-session2/tree/node6)\n\n## Require\nnode v7.x +\n\n## Install\n```\nnpm install koa-session2\n```\n\n## Usage\n```js\nconst Koa = require(\"koa\");\nconst session = require(\"koa-session2\");\n\nconst app = new Koa();\n\napp.use(session({\n    key: \"SESSIONID\",   //default \"koa:sess\"\n}));\n```\n\n### Custom Stores\n\nStore.js\n```js\nconst Redis = require(\"ioredis\");\nconst { Store } = require(\"koa-session2\");\n\nclass RedisStore extends Store {\n    constructor() {\n        super();\n        this.redis = new Redis();\n    }\n\n    async get(sid) {\n        let data = await this.redis.get(`SESSION:${sid}`);\n        return JSON.parse(data);\n    }\n\n    async set(session, { sid =  this.getID(24), maxAge = 1000000 } = {}) {\n        try {\n            // Use redis set EX to automatically drop expired sessions\n            await this.redis.set(`SESSION:${sid}`, JSON.stringify(session), 'EX', maxAge / 1000);\n        } catch (e) {}\n        return sid;\n    }\n\n    async destroy(sid) {\n        return await this.redis.del(`SESSION:${sid}`);\n    }\n}\n\nmodule.exports = RedisStore;\n```\nmain.js\n```js\nconst Koa = require(\"koa\");\nconst session = require(\"koa-session2\");\nconst Store = require(\"./Store.js\");\n\nconst app = new Koa();\n\napp.use(session({\n    store: new Store()\n}));\n\napp.use(ctx => {\n    let user = ctx.session.user;\n\n    ctx.session.view = \"index\";\n});\n```\n\n## Options\n\nMost options based on [cookies](https://github.com/pillarjs/cookies#cookiesset-name--value---options--)\n\n- `key`: a string for store session id in cookie\n- `store`: a class for custom store (extend {Store}, func: #get(sid), #set(session, opts), #destory(sid))\n\n- `maxAge`: a number representing the milliseconds from `Date.now()` for expiry\n- `expires`: a `Date` object indicating the cookie's expiration date (expires at the end of session by default).\n- `path`: a string indicating the path of the cookie (`/` by default).\n- `domain`: a string indicating the domain of the cookie (no default).\n- `secure`: a boolean indicating whether the cookie is only to be sent over HTTPS (`false` by default for HTTP, `true` by default for HTTPS).\n- `httpOnly`: a boolean indicating whether the cookie is only to be sent over HTTP(S), and not made available to client JavaScript (`true` by default).\n- `signed`: a boolean indicating whether the cookie is to be signed (`false` by default). If this is true, another cookie of the same name with the `.sig` suffix appended will also be sent, with a 27-byte url-safe base64 SHA1 value representing the hash of _cookie-name_=_cookie-value_ against the first [Keygrip](https://www.npmjs.com/package/keygrip) key. This signature key is used to detect tampering the next time a cookie is received.\n- `overwrite`: a boolean indicating whether to overwrite previously set cookies of the same name (`false` by default). If this is true, all cookies set during the same request with the same name (regardless of path or domain) are filtered out of the Set-Cookie header when setting this cookie.\n\n## License\n\nMIT\n\n\n[npm-image]: https://img.shields.io/npm/v/koa-session2.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-session2\n[downloads-image]: http://img.shields.io/npm/dm/koa-session2.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/koa-session2\n[travis-image]: https://img.shields.io/travis/Secbone/koa-session2/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/Secbone/koa-session2\n[codecov-image]: https://img.shields.io/codecov/c/github/Secbone/koa-session2/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/Secbone/koa-session2/branch/master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Secbone/koa-session2.git"
  },
  "scripts": {
    "test": "mocha",
    "test-cov": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec"
  },
  "version": "2.2.4"
}
